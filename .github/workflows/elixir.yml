name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: 1.9.4 # Define the elixir version [required] - must equal the dialyzer cache key
          otp-version: 22.2 # Define the OTP version [required]
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ hashFiles('**/mix.lock') }}-deps
      - name: Get Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Cache Core PLTs
        id: cache-core-plts
        uses: actions/cache@v1
        with:
          path: ~/.mix
          key: 1.9.4-plt
      - name: Build Core PLTs
        if: steps.cache-core-plts.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Check Credo
        run: mix credo --strict
      - name: Run the Dialyzer
        run: env MIX_ENV=test mix dialyzer
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pair:
          - erlang: 22.x
            elixir: "1.10.1"
          - erlang: 22.x
            elixir: 1.9
          - erlang: 22.x
            elixir: 1.8
          - erlang: 22.x
            elixir: 1.7

          - erlang: 21.x
            elixir: 1.9
          - erlang: 21.x
            elixir: 1.8
          - erlang: 21.x
            elixir: 1.7

    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: 1.9.4 # Define the elixir version [required]
          otp-version: 22.2 # Define the OTP version [required]
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ hashFiles('**/mix.lock') }}-deps
      - name: Get Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Install Dependencies
        run: env MIX_ENV=TEST mix do deps.get, deps.compile
      - name: Compile PropCheck
        run: env MIX_ENV=TEST mix compile --warnings-as-errors
      - name: Run Tests
        run: PROPCHECK_DEBUG=1 PROPCHECK_VERBOSE=1 PROPCHECK_NUMTESTS=200 PROPCHECK_SEARCH_STEPS=1000 mix tests --cover --trace
